(lldb) target create /bin/ls
Current executable set to '/bin/ls' (x86_64).
(lldb) disassemble --start-address 0x0000000100003940 --end-address 0x00000001000073df
ls`___lldb_unnamed_symbol93:
ls[0x100003940] <+0>:    pushq  %rbp
ls[0x100003941] <+1>:    movq   %rsp, %rbp
ls[0x100003944] <+4>:    addq   $0x68, %rdi
ls[0x100003948] <+8>:    addq   $0x68, %rsi
ls[0x10000394c] <+12>:   popq   %rbp
ls[0x10000394d] <+13>:   jmp    0x100007554               ; symbol stub for: strcoll

ls`___lldb_unnamed_symbol94:
ls[0x100003952] <+0>:    pushq  %rbp
ls[0x100003953] <+1>:    movq   %rsp, %rbp
ls[0x100003956] <+4>:    leaq   0x68(%rsi), %rax
ls[0x10000395a] <+8>:    leaq   0x68(%rdi), %rsi
ls[0x10000395e] <+12>:   movq   %rax, %rdi
ls[0x100003961] <+15>:   popq   %rbp
ls[0x100003962] <+16>:   jmp    0x100007554               ; symbol stub for: strcoll

ls`___lldb_unnamed_symbol95:
ls[0x100003967] <+0>:    pushq  %rbp
ls[0x100003968] <+1>:    movq   %rsp, %rbp
ls[0x10000396b] <+4>:    movq   %rdi, %r8
ls[0x10000396e] <+7>:    movq   0x60(%rsi), %rdx
ls[0x100003972] <+11>:   movq   0x60(%rdi), %rdi
ls[0x100003976] <+15>:   movq   0x30(%rdi), %rcx
ls[0x10000397a] <+19>:   movl   $0x1, %eax
ls[0x10000397f] <+24>:   cmpq   %rcx, 0x30(%rdx)
ls[0x100003983] <+28>:   jg     0x10000399f               ; <+56>
ls[0x100003985] <+30>:   jge    0x10000398e               ; <+39>
ls[0x100003987] <+32>:   movl   $0xffffffff, %eax         ; imm = 0xFFFFFFFF 
ls[0x10000398c] <+37>:   jmp    0x10000399f               ; <+56>
ls[0x10000398e] <+39>:   movq   0x38(%rdi), %rcx
ls[0x100003992] <+43>:   cmpq   %rcx, 0x38(%rdx)
ls[0x100003996] <+47>:   jg     0x10000399f               ; <+56>
ls[0x100003998] <+49>:   movl   $0xffffffff, %eax         ; imm = 0xFFFFFFFF 
ls[0x10000399d] <+54>:   jge    0x1000039a1               ; <+58>
ls[0x10000399f] <+56>:   popq   %rbp
ls[0x1000039a0] <+57>:   retq   
ls[0x1000039a1] <+58>:   leaq   0x4bdc(%rip), %rax
ls[0x1000039a8] <+65>:   cmpl   $0x0, (%rax)
ls[0x1000039ab] <+68>:   movq   %rsi, %rdi
ls[0x1000039ae] <+71>:   cmoveq %r8, %rdi
ls[0x1000039b2] <+75>:   cmoveq %rsi, %r8
ls[0x1000039b6] <+79>:   addq   $0x68, %rdi
ls[0x1000039ba] <+83>:   addq   $0x68, %r8
ls[0x1000039be] <+87>:   movq   %r8, %rsi
ls[0x1000039c1] <+90>:   popq   %rbp
ls[0x1000039c2] <+91>:   jmp    0x100007554               ; symbol stub for: strcoll

ls`___lldb_unnamed_symbol96:
ls[0x1000039c7] <+0>:    pushq  %rbp
ls[0x1000039c8] <+1>:    movq   %rsp, %rbp
ls[0x1000039cb] <+4>:    movq   %rdi, %rax
ls[0x1000039ce] <+7>:    movq   %rsi, %rdi
ls[0x1000039d1] <+10>:   movq   %rax, %rsi
ls[0x1000039d4] <+13>:   popq   %rbp
ls[0x1000039d5] <+14>:   jmp    0x100003967               ; ___lldb_unnamed_symbol95

ls`___lldb_unnamed_symbol97:
ls[0x1000039da] <+0>:    pushq  %rbp
ls[0x1000039db] <+1>:    movq   %rsp, %rbp
ls[0x1000039de] <+4>:    movq   %rdi, %r8
ls[0x1000039e1] <+7>:    movq   0x60(%rsi), %rdx
ls[0x1000039e5] <+11>:   movq   0x60(%rdi), %rdi
ls[0x1000039e9] <+15>:   movq   0x20(%rdi), %rcx
ls[0x1000039ed] <+19>:   movl   $0x1, %eax
ls[0x1000039f2] <+24>:   cmpq   %rcx, 0x20(%rdx)
ls[0x1000039f6] <+28>:   jg     0x100003a12               ; <+56>
ls[0x1000039f8] <+30>:   jge    0x100003a01               ; <+39>
ls[0x1000039fa] <+32>:   movl   $0xffffffff, %eax         ; imm = 0xFFFFFFFF 
ls[0x1000039ff] <+37>:   jmp    0x100003a12               ; <+56>
ls[0x100003a01] <+39>:   movq   0x28(%rdi), %rcx
ls[0x100003a05] <+43>:   cmpq   %rcx, 0x28(%rdx)
ls[0x100003a09] <+47>:   jg     0x100003a12               ; <+56>
ls[0x100003a0b] <+49>:   movl   $0xffffffff, %eax         ; imm = 0xFFFFFFFF 
ls[0x100003a10] <+54>:   jge    0x100003a14               ; <+58>
ls[0x100003a12] <+56>:   popq   %rbp
ls[0x100003a13] <+57>:   retq   
ls[0x100003a14] <+58>:   leaq   0x4b69(%rip), %rax
ls[0x100003a1b] <+65>:   cmpl   $0x0, (%rax)
ls[0x100003a1e] <+68>:   movq   %rsi, %rdi
ls[0x100003a21] <+71>:   cmoveq %r8, %rdi
ls[0x100003a25] <+75>:   cmoveq %rsi, %r8
ls[0x100003a29] <+79>:   addq   $0x68, %rdi
ls[0x100003a2d] <+83>:   addq   $0x68, %r8
ls[0x100003a31] <+87>:   movq   %r8, %rsi
ls[0x100003a34] <+90>:   popq   %rbp
ls[0x100003a35] <+91>:   jmp    0x100007554               ; symbol stub for: strcoll

ls`___lldb_unnamed_symbol98:
ls[0x100003a3a] <+0>:    pushq  %rbp
ls[0x100003a3b] <+1>:    movq   %rsp, %rbp
ls[0x100003a3e] <+4>:    movq   %rdi, %rax
ls[0x100003a41] <+7>:    movq   %rsi, %rdi
ls[0x100003a44] <+10>:   movq   %rax, %rsi
ls[0x100003a47] <+13>:   popq   %rbp
ls[0x100003a48] <+14>:   jmp    0x1000039da               ; ___lldb_unnamed_symbol97

ls`___lldb_unnamed_symbol99:
ls[0x100003a4d] <+0>:    pushq  %rbp
ls[0x100003a4e] <+1>:    movq   %rsp, %rbp
ls[0x100003a51] <+4>:    movq   %rdi, %r8
ls[0x100003a54] <+7>:    movq   0x60(%rsi), %rdx
ls[0x100003a58] <+11>:   movq   0x60(%rdi), %rdi
ls[0x100003a5c] <+15>:   movq   0x50(%rdi), %rcx
ls[0x100003a60] <+19>:   movl   $0x1, %eax
ls[0x100003a65] <+24>:   cmpq   %rcx, 0x50(%rdx)
ls[0x100003a69] <+28>:   jg     0x100003a85               ; <+56>
ls[0x100003a6b] <+30>:   jge    0x100003a74               ; <+39>
ls[0x100003a6d] <+32>:   movl   $0xffffffff, %eax         ; imm = 0xFFFFFFFF 
ls[0x100003a72] <+37>:   jmp    0x100003a85               ; <+56>
ls[0x100003a74] <+39>:   movq   0x58(%rdi), %rcx
ls[0x100003a78] <+43>:   cmpq   %rcx, 0x58(%rdx)
ls[0x100003a7c] <+47>:   jg     0x100003a85               ; <+56>
ls[0x100003a7e] <+49>:   movl   $0xffffffff, %eax         ; imm = 0xFFFFFFFF 
ls[0x100003a83] <+54>:   jge    0x100003a87               ; <+58>
ls[0x100003a85] <+56>:   popq   %rbp
ls[0x100003a86] <+57>:   retq   
ls[0x100003a87] <+58>:   leaq   0x4af6(%rip), %rax
ls[0x100003a8e] <+65>:   cmpl   $0x0, (%rax)
ls[0x100003a91] <+68>:   movq   %rsi, %rdi
ls[0x100003a94] <+71>:   cmoveq %r8, %rdi
ls[0x100003a98] <+75>:   cmoveq %rsi, %r8
ls[0x100003a9c] <+79>:   addq   $0x68, %rdi
ls[0x100003aa0] <+83>:   addq   $0x68, %r8
ls[0x100003aa4] <+87>:   movq   %r8, %rsi
ls[0x100003aa7] <+90>:   popq   %rbp
ls[0x100003aa8] <+91>:   jmp    0x100007554               ; symbol stub for: strcoll

ls`___lldb_unnamed_symbol100:
ls[0x100003aad] <+0>:    pushq  %rbp
ls[0x100003aae] <+1>:    movq   %rsp, %rbp
ls[0x100003ab1] <+4>:    movq   %rdi, %rax
ls[0x100003ab4] <+7>:    movq   %rsi, %rdi
ls[0x100003ab7] <+10>:   movq   %rax, %rsi
ls[0x100003aba] <+13>:   popq   %rbp
ls[0x100003abb] <+14>:   jmp    0x100003a4d               ; ___lldb_unnamed_symbol99

ls`___lldb_unnamed_symbol101:
ls[0x100003ac0] <+0>:    pushq  %rbp
ls[0x100003ac1] <+1>:    movq   %rsp, %rbp
ls[0x100003ac4] <+4>:    movq   %rdi, %r8
ls[0x100003ac7] <+7>:    movq   0x60(%rsi), %rdx
ls[0x100003acb] <+11>:   movq   0x60(%rdi), %rdi
ls[0x100003acf] <+15>:   movq   0x40(%rdi), %rcx
ls[0x100003ad3] <+19>:   movl   $0x1, %eax
ls[0x100003ad8] <+24>:   cmpq   %rcx, 0x40(%rdx)
ls[0x100003adc] <+28>:   jg     0x100003af8               ; <+56>
ls[0x100003ade] <+30>:   jge    0x100003ae7               ; <+39>
ls[0x100003ae0] <+32>:   movl   $0xffffffff, %eax         ; imm = 0xFFFFFFFF 
ls[0x100003ae5] <+37>:   jmp    0x100003af8               ; <+56>
ls[0x100003ae7] <+39>:   movq   0x48(%rdi), %rcx
ls[0x100003aeb] <+43>:   cmpq   %rcx, 0x48(%rdx)
ls[0x100003aef] <+47>:   jg     0x100003af8               ; <+56>
ls[0x100003af1] <+49>:   movl   $0xffffffff, %eax         ; imm = 0xFFFFFFFF 
ls[0x100003af6] <+54>:   jge    0x100003afa               ; <+58>
ls[0x100003af8] <+56>:   popq   %rbp
ls[0x100003af9] <+57>:   retq   
ls[0x100003afa] <+58>:   leaq   0x4a83(%rip), %rax
ls[0x100003b01] <+65>:   cmpl   $0x0, (%rax)
ls[0x100003b04] <+68>:   movq   %rsi, %rdi
ls[0x100003b07] <+71>:   cmoveq %r8, %rdi
ls[0x100003b0b] <+75>:   cmoveq %rsi, %r8
ls[0x100003b0f] <+79>:   addq   $0x68, %rdi
ls[0x100003b13] <+83>:   addq   $0x68, %r8
ls[0x100003b17] <+87>:   movq   %r8, %rsi
ls[0x100003b1a] <+90>:   popq   %rbp
ls[0x100003b1b] <+91>:   jmp    0x100007554               ; symbol stub for: strcoll

ls`___lldb_unnamed_symbol102:
ls[0x100003b20] <+0>:    pushq  %rbp
ls[0x100003b21] <+1>:    movq   %rsp, %rbp
ls[0x100003b24] <+4>:    movq   %rdi, %rax
ls[0x100003b27] <+7>:    movq   %rsi, %rdi
ls[0x100003b2a] <+10>:   movq   %rax, %rsi
ls[0x100003b2d] <+13>:   popq   %rbp
ls[0x100003b2e] <+14>:   jmp    0x100003ac0               ; ___lldb_unnamed_symbol101

ls`___lldb_unnamed_symbol103:
ls[0x100003b33] <+0>:    pushq  %rbp
ls[0x100003b34] <+1>:    movq   %rsp, %rbp
ls[0x100003b37] <+4>:    movq   0x60(%rsi), %rcx
ls[0x100003b3b] <+8>:    movq   0x60(%rdi), %rax
ls[0x100003b3f] <+12>:   movq   0x60(%rax), %rdx
ls[0x100003b43] <+16>:   movl   $0x1, %eax
ls[0x100003b48] <+21>:   cmpq   %rdx, 0x60(%rcx)
ls[0x100003b4c] <+25>:   jg     0x100003b55               ; <+34>
ls[0x100003b4e] <+27>:   movl   $0xffffffff, %eax         ; imm = 0xFFFFFFFF 
ls[0x100003b53] <+32>:   jge    0x100003b57               ; <+36>
ls[0x100003b55] <+34>:   popq   %rbp
ls[0x100003b56] <+35>:   retq   
ls[0x100003b57] <+36>:   addq   $0x68, %rdi
ls[0x100003b5b] <+40>:   addq   $0x68, %rsi
ls[0x100003b5f] <+44>:   popq   %rbp
ls[0x100003b60] <+45>:   jmp    0x100007554               ; symbol stub for: strcoll

ls`___lldb_unnamed_symbol104:
ls[0x100003b65] <+0>:    pushq  %rbp
ls[0x100003b66] <+1>:    movq   %rsp, %rbp
ls[0x100003b69] <+4>:    movq   %rdi, %rcx
ls[0x100003b6c] <+7>:    movq   0x60(%rdi), %rdx
ls[0x100003b70] <+11>:   movq   0x60(%rsi), %rax
ls[0x100003b74] <+15>:   movq   0x60(%rax), %rdi
ls[0x100003b78] <+19>:   movl   $0x1, %eax
ls[0x100003b7d] <+24>:   cmpq   %rdi, 0x60(%rdx)
ls[0x100003b81] <+28>:   jg     0x100003b8a               ; <+37>
ls[0x100003b83] <+30>:   movl   $0xffffffff, %eax         ; imm = 0xFFFFFFFF 
ls[0x100003b88] <+35>:   jge    0x100003b8c               ; <+39>
ls[0x100003b8a] <+37>:   popq   %rbp
ls[0x100003b8b] <+38>:   retq   
ls[0x100003b8c] <+39>:   addq   $0x68, %rsi
ls[0x100003b90] <+43>:   addq   $0x68, %rcx
ls[0x100003b94] <+47>:   movq   %rsi, %rdi
ls[0x100003b97] <+50>:   movq   %rcx, %rsi
ls[0x100003b9a] <+53>:   popq   %rbp
ls[0x100003b9b] <+54>:   jmp    0x100007554               ; symbol stub for: strcoll

ls`___lldb_unnamed_symbol105:
ls[0x100003ba0] <+0>:    pushq  %rbp
ls[0x100003ba1] <+1>:    movq   %rsp, %rbp
ls[0x100003ba4] <+4>:    pushq  %r15
ls[0x100003ba6] <+6>:    pushq  %r14
ls[0x100003ba8] <+8>:    pushq  %r13
ls[0x100003baa] <+10>:   pushq  %r12
ls[0x100003bac] <+12>:   pushq  %rbx
ls[0x100003bad] <+13>:   subq   $0x638, %rsp              ; imm = 0x638 
ls[0x100003bb4] <+20>:   movq   %rsi, %r15
ls[0x100003bb7] <+23>:   movl   %edi, %r14d
ls[0x100003bba] <+26>:   movq   $0x0, -0x40(%rbp)
ls[0x100003bc2] <+34>:   leaq   -0x260(%rbp), %rax
ls[0x100003bc9] <+41>:   movq   %rax, -0x48(%rbp)
ls[0x100003bcd] <+45>:   testl  %edi, %edi
ls[0x100003bcf] <+47>:   jg     0x100003bd6               ; <+54>
ls[0x100003bd1] <+49>:   callq  0x1000071ff               ; ___lldb_unnamed_symbol130
ls[0x100003bd6] <+54>:   leaq   0x3e76(%rip), %rsi        ; ""
ls[0x100003bdd] <+61>:   xorl   %edi, %edi
ls[0x100003bdf] <+63>:   callq  0x10000753c               ; symbol stub for: setlocale
ls[0x100003be4] <+68>:   leaq   0x3e69(%rip), %rdi        ; "bin/ls"
ls[0x100003beb] <+75>:   leaq   0x3e69(%rip), %rsi        ; "Unix2003"
ls[0x100003bf2] <+82>:   callq  0x100007446               ; symbol stub for: compat_mode
ls[0x100003bf7] <+87>:   movb   %al, 0x497f(%rip)
ls[0x100003bfd] <+93>:   movl   $0x1, %edi
ls[0x100003c02] <+98>:   callq  0x1000074dc               ; symbol stub for: isatty
ls[0x100003c07] <+103>:  testl  %eax, %eax
ls[0x100003c09] <+105>:  jne    0x100003c42               ; <+162>
ls[0x100003c0b] <+107>:  movb   $0x1, 0x4a1e(%rip)
ls[0x100003c12] <+114>:  leaq   0x3e4b(%rip), %rdi        ; "COLUMNS"
ls[0x100003c19] <+121>:  callq  0x1000074ac               ; symbol stub for: getenv
ls[0x100003c1e] <+126>:  testq  %rax, %rax
ls[0x100003c21] <+129>:  je     0x100003cad               ; <+269>
ls[0x100003c27] <+135>:  leaq   -0x40(%rbp), %rcx
ls[0x100003c2b] <+139>:  movl   $0x7fffffff, %edx         ; imm = 0x7FFFFFFF 
ls[0x100003c30] <+144>:  movq   %rax, %rdi
ls[0x100003c33] <+147>:  xorl   %esi, %esi
ls[0x100003c35] <+149>:  callq  0x100007584               ; symbol stub for: strtonum
ls[0x100003c3a] <+154>:  movl   %eax, 0x4910(%rip)
ls[0x100003c40] <+160>:  jmp    0x100003cad               ; <+269>
ls[0x100003c42] <+162>:  movl   $0x50, 0x4904(%rip)
ls[0x100003c4c] <+172>:  leaq   0x3e11(%rip), %rdi        ; "COLUMNS"
ls[0x100003c53] <+179>:  callq  0x1000074ac               ; symbol stub for: getenv
ls[0x100003c58] <+184>:  testq  %rax, %rax
ls[0x100003c5b] <+187>:  je     0x100003c62               ; <+194>
ls[0x100003c5d] <+189>:  cmpb   $0x0, (%rax)
ls[0x100003c60] <+192>:  jne    0x100003c8a               ; <+234>
ls[0x100003c62] <+194>:  leaq   -0x50(%rbp), %rdx
ls[0x100003c66] <+198>:  movl   $0x40087468, %esi         ; imm = 0x40087468 
ls[0x100003c6b] <+203>:  movl   $0x1, %edi
ls[0x100003c70] <+208>:  xorl   %eax, %eax
ls[0x100003c72] <+210>:  callq  0x1000074d6               ; symbol stub for: ioctl
ls[0x100003c77] <+215>:  cmpl   $-0x1, %eax
ls[0x100003c7a] <+218>:  je     0x100003ca3               ; <+259>
ls[0x100003c7c] <+220>:  movzwl -0x4e(%rbp), %eax
ls[0x100003c80] <+224>:  testw  %ax, %ax
ls[0x100003c83] <+227>:  je     0x100003ca3               ; <+259>
ls[0x100003c85] <+229>:  movzwl %ax, %eax
ls[0x100003c88] <+232>:  jmp    0x100003c9d               ; <+253>
ls[0x100003c8a] <+234>:  leaq   -0x40(%rbp), %rcx
ls[0x100003c8e] <+238>:  movl   $0x7fffffff, %edx         ; imm = 0x7FFFFFFF 
ls[0x100003c93] <+243>:  movq   %rax, %rdi
ls[0x100003c96] <+246>:  xorl   %esi, %esi
ls[0x100003c98] <+248>:  callq  0x100007584               ; symbol stub for: strtonum
ls[0x100003c9d] <+253>:  movl   %eax, 0x48ad(%rip)
ls[0x100003ca3] <+259>:  movl   $0x1, 0x48d3(%rip)
ls[0x100003cad] <+269>:  cmpq   $0x0, -0x40(%rbp)
ls[0x100003cb2] <+274>:  je     0x100003cbe               ; <+286>
ls[0x100003cb4] <+276>:  movl   $0x50, 0x4892(%rip)
ls[0x100003cbe] <+286>:  leaq   0x3da7(%rip), %rdi        ; "LS_SAMESORT"
ls[0x100003cc5] <+293>:  callq  0x1000074ac               ; symbol stub for: getenv
ls[0x100003cca] <+298>:  testq  %rax, %rax
ls[0x100003ccd] <+301>:  je     0x100003cd9               ; <+313>
ls[0x100003ccf] <+303>:  movl   $0x1, 0x48ab(%rip)
ls[0x100003cd9] <+313>:  leaq   0x3d98(%rip), %rdi        ; "CLICOLOR"
ls[0x100003ce0] <+320>:  callq  0x1000074ac               ; symbol stub for: getenv
ls[0x100003ce5] <+325>:  testq  %rax, %rax
ls[0x100003ce8] <+328>:  je     0x100003cf4               ; <+340>
ls[0x100003cea] <+330>:  movl   $0x1, 0x4884(%rip)
ls[0x100003cf4] <+340>:  movl   $0x10, -0x2c(%rbp)
ls[0x100003cfb] <+347>:  leaq   0x3d7f(%rip), %r12        ; "+@1ABCD:FGHILOPRSTUWabcdefghiklmnopqrstuvwxy%,"
ls[0x100003d02] <+354>:  leaq   0x45d7(%rip), %rbx
ls[0x100003d09] <+361>:  leaq   0x988(%rip), %r13         ; <+2808>
ls[0x100003d10] <+368>:  movl   %r14d, %edi
ls[0x100003d13] <+371>:  movq   %r15, %rsi
ls[0x100003d16] <+374>:  movq   %r12, %rdx
ls[0x100003d19] <+377>:  movq   %rbx, %rcx
ls[0x100003d1c] <+380>:  xorl   %r8d, %r8d
ls[0x100003d1f] <+383>:  callq  0x1000074b2               ; symbol stub for: getopt_long
ls[0x100003d24] <+388>:  leal   -0x25(%rax), %ecx
ls[0x100003d27] <+391>:  cmpl   $0x5b, %ecx
ls[0x100003d2a] <+394>:  ja     0x1000041e5               ; <+1605>
ls[0x100003d30] <+400>:  movslq (%r13,%rcx,4), %rax
ls[0x100003d35] <+405>:  addq   %r13, %rax
ls[0x100003d38] <+408>:  jmpq   *%rax
ls[0x100003d3a] <+410>:  movl   $0x1, 0x489c(%rip)
ls[0x100003d44] <+420>:  jmp    0x100003d10               ; <+368>
ls[0x100003d46] <+422>:  movl   $0x1, 0x4834(%rip)
ls[0x100003d50] <+432>:  jmp    0x100003d10               ; <+368>
ls[0x100003d52] <+434>:  movl   $0x1, 0x486c(%rip)
ls[0x100003d5c] <+444>:  cmpb   $0x0, 0x4819(%rip)
ls[0x100003d63] <+451>:  je     0x100003d10               ; <+368>
ls[0x100003d65] <+453>:  movl   $0x1, 0x4819(%rip)
ls[0x100003d6f] <+463>:  jmp    0x100003f13               ; <+883>
ls[0x100003d74] <+468>:  cmpb   $0x0, 0x4801(%rip)
ls[0x100003d7b] <+475>:  je     0x100003d10               ; <+368>
ls[0x100003d7d] <+477>:  movl   $0x1, %eax
ls[0x100003d82] <+482>:  movl   %eax, 0x4834(%rip)
ls[0x100003d88] <+488>:  jmp    0x100003f0d               ; <+877>
ls[0x100003d8d] <+493>:  movb   $0x1, 0x48cc(%rip)
ls[0x100003d94] <+500>:  jmp    0x100003d10               ; <+368>
ls[0x100003d99] <+505>:  movb   $0x1, 0x48a4(%rip)
ls[0x100003da0] <+512>:  movb   $0x0, 0x4899(%rip)
ls[0x100003da7] <+519>:  jmp    0x100003d10               ; <+368>
ls[0x100003dac] <+524>:  movl   $0x1, 0x47de(%rip)
ls[0x100003db6] <+534>:  xorl   %eax, %eax
ls[0x100003db8] <+536>:  movl   %eax, 0x47d2(%rip)
ls[0x100003dbe] <+542>:  movl   %eax, 0x47d4(%rip)
ls[0x100003dc4] <+548>:  jmp    0x100003d10               ; <+368>
ls[0x100003dc9] <+553>:  movq   0x4258(%rip), %rax        ; (void *)0x0000000000000000
ls[0x100003dd0] <+560>:  movq   (%rax), %rax
ls[0x100003dd3] <+563>:  movq   %rax, -0x38(%rbp)
ls[0x100003dd7] <+567>:  testq  %rax, %rax
ls[0x100003dda] <+570>:  je     0x1000041d6               ; <+1590>
ls[0x100003de0] <+576>:  leaq   0x3d71(%rip), %rsi        ; "always"
ls[0x100003de7] <+583>:  movq   -0x38(%rbp), %rdi
ls[0x100003deb] <+587>:  callq  0x10000754e               ; symbol stub for: strcmp
ls[0x100003df0] <+592>:  testl  %eax, %eax
ls[0x100003df2] <+594>:  je     0x1000041d6               ; <+1590>
ls[0x100003df8] <+600>:  leaq   0x3d60(%rip), %rsi        ; "yes"
ls[0x100003dff] <+607>:  movq   -0x38(%rbp), %rdi
ls[0x100003e03] <+611>:  callq  0x10000754e               ; symbol stub for: strcmp
ls[0x100003e08] <+616>:  testl  %eax, %eax
ls[0x100003e0a] <+618>:  je     0x1000041d6               ; <+1590>
ls[0x100003e10] <+624>:  leaq   0x3d4c(%rip), %rsi        ; "force"
ls[0x100003e17] <+631>:  movq   -0x38(%rbp), %rdi
ls[0x100003e1b] <+635>:  callq  0x10000754e               ; symbol stub for: strcmp
ls[0x100003e20] <+640>:  testl  %eax, %eax
ls[0x100003e22] <+642>:  je     0x1000041d6               ; <+1590>
ls[0x100003e28] <+648>:  leaq   0x3d3a(%rip), %rsi        ; "auto"
ls[0x100003e2f] <+655>:  movq   -0x38(%rbp), %rdi
ls[0x100003e33] <+659>:  callq  0x10000754e               ; symbol stub for: strcmp
ls[0x100003e38] <+664>:  testl  %eax, %eax
ls[0x100003e3a] <+666>:  je     0x10000410e               ; <+1390>
ls[0x100003e40] <+672>:  leaq   0x3d27(%rip), %rsi        ; "tty"
ls[0x100003e47] <+679>:  movq   -0x38(%rbp), %rdi
ls[0x100003e4b] <+683>:  callq  0x10000754e               ; symbol stub for: strcmp
ls[0x100003e50] <+688>:  testl  %eax, %eax
ls[0x100003e52] <+690>:  je     0x10000410e               ; <+1390>
ls[0x100003e58] <+696>:  leaq   0x3d13(%rip), %rsi        ; "if-tty"
ls[0x100003e5f] <+703>:  movq   -0x38(%rbp), %rdi
ls[0x100003e63] <+707>:  callq  0x10000754e               ; symbol stub for: strcmp
ls[0x100003e68] <+712>:  testl  %eax, %eax
ls[0x100003e6a] <+714>:  je     0x10000410e               ; <+1390>
ls[0x100003e70] <+720>:  leaq   0x3d02(%rip), %rsi        ; "never"
ls[0x100003e77] <+727>:  movq   -0x38(%rbp), %rdi
ls[0x100003e7b] <+731>:  callq  0x10000754e               ; symbol stub for: strcmp
ls[0x100003e80] <+736>:  testl  %eax, %eax
ls[0x100003e82] <+738>:  je     0x100003eb0               ; <+784>
ls[0x100003e84] <+740>:  leaq   0x3cf4(%rip), %rsi        ; "no"
ls[0x100003e8b] <+747>:  movq   -0x38(%rbp), %rdi
ls[0x100003e8f] <+751>:  callq  0x10000754e               ; symbol stub for: strcmp
ls[0x100003e94] <+756>:  testl  %eax, %eax
ls[0x100003e96] <+758>:  je     0x100003eb0               ; <+784>
ls[0x100003e98] <+760>:  leaq   0x3ce3(%rip), %rsi        ; "none"
ls[0x100003e9f] <+767>:  movq   -0x38(%rbp), %rdi
ls[0x100003ea3] <+771>:  callq  0x10000754e               ; symbol stub for: strcmp
ls[0x100003ea8] <+776>:  testl  %eax, %eax
ls[0x100003eaa] <+778>:  jne    0x10000457a               ; <+2522>
ls[0x100003eb0] <+784>:  movl   $0x0, 0x46be(%rip)
ls[0x100003eba] <+794>:  jmp    0x100003d10               ; <+368>
ls[0x100003ebf] <+799>:  movl   $0x1, 0x46cf(%rip)
ls[0x100003ec9] <+809>:  xorl   %eax, %eax
ls[0x100003ecb] <+811>:  movl   %eax, 0x46c3(%rip)
ls[0x100003ed1] <+817>:  movl   %eax, 0x46b9(%rip)
ls[0x100003ed7] <+823>:  jmp    0x100003d10               ; <+368>
ls[0x100003edc] <+828>:  xorl   %eax, %eax
ls[0x100003ede] <+830>:  movl   %eax, 0x469c(%rip)
ls[0x100003ee4] <+836>:  movl   %eax, 0x46b6(%rip)
ls[0x100003eea] <+842>:  movl   $0x1, 0x46b0(%rip)
ls[0x100003ef4] <+852>:  jmp    0x100003d10               ; <+368>
ls[0x100003ef9] <+857>:  cmpb   $0x0, 0x467c(%rip)
ls[0x100003f00] <+864>:  je     0x100003f26               ; <+902>
ls[0x100003f02] <+866>:  movl   $0x1, %eax
ls[0x100003f07] <+871>:  movl   %eax, 0x46bf(%rip)
ls[0x100003f0d] <+877>:  movl   %eax, 0x4675(%rip)
ls[0x100003f13] <+883>:  xorl   %eax, %eax
ls[0x100003f15] <+885>:  movb   %al, 0x4715(%rip)
ls[0x100003f1b] <+891>:  movb   %al, 0x4713(%rip)
ls[0x100003f21] <+897>:  jmp    0x100003d10               ; <+368>
ls[0x100003f26] <+902>:  movl   $0x1, 0x46a0(%rip)
ls[0x100003f30] <+912>:  jmp    0x100003d10               ; <+368>
ls[0x100003f35] <+917>:  movl   $0x1, 0x469d(%rip)
ls[0x100003f3f] <+927>:  jmp    0x100003d10               ; <+368>
ls[0x100003f44] <+932>:  movl   $0x1, 0x4662(%rip)
ls[0x100003f4e] <+942>:  movl   $0x0, 0x465c(%rip)
ls[0x100003f58] <+952>:  jmp    0x100003d10               ; <+368>
ls[0x100003f5d] <+957>:  movl   -0x2c(%rbp), %ecx
ls[0x100003f60] <+960>:  movl   %ecx, %eax
ls[0x100003f62] <+962>:  andl   $0xfffffbed, %eax         ; imm = 0xFFFFFBED 
ls[0x100003f67] <+967>:  orl    $0x410, %eax              ; imm = 0x410 
ls[0x100003f6c] <+972>:  orl    $0x1, %ecx
ls[0x100003f6f] <+975>:  cmpb   $0x0, 0x4606(%rip)
ls[0x100003f76] <+982>:  cmovnel %eax, %ecx
ls[0x100003f79] <+985>:  movl   %ecx, -0x2c(%rbp)
ls[0x100003f7c] <+988>:  movb   $0x0, 0x46c5(%rip)
ls[0x100003f83] <+995>:  jmp    0x100003d10               ; <+368>
ls[0x100003f88] <+1000>: movb   $0x1, 0x46c9(%rip)
ls[0x100003f8f] <+1007>: movb   $0x0, 0x46ba(%rip)
ls[0x100003f96] <+1014>: jmp    0x100003d10               ; <+368>
ls[0x100003f9b] <+1019>: movb   $0x1, 0x4696(%rip)
ls[0x100003fa2] <+1026>: orl    $0x20, -0x2c(%rbp)
ls[0x100003fa6] <+1030>: movb   $0x1, 0x468f(%rip)
ls[0x100003fad] <+1037>: jmp    0x100003d10               ; <+368>
ls[0x100003fb2] <+1042>: movl   $0x1, 0x4608(%rip)
ls[0x100003fbc] <+1052>: jmp    0x100003d10               ; <+368>
ls[0x100003fc1] <+1057>: movl   $0x0, 0x45b5(%rip)
ls[0x100003fcb] <+1067>: jmp    0x100003d10               ; <+368>
ls[0x100003fd0] <+1072>: movl   $0x1, 0x45c2(%rip)
ls[0x100003fda] <+1082>: jmp    0x100003d10               ; <+368>
ls[0x100003fdf] <+1087>: movb   $0x1, 0x464a(%rip)
ls[0x100003fe6] <+1094>: movl   $0x0, 0x4598(%rip)
ls[0x100003ff0] <+1104>: movb   $0x0, 0x463d(%rip)
ls[0x100003ff7] <+1111>: jmp    0x100003d10               ; <+368>
ls[0x100003ffc] <+1116>: xorl   %eax, %eax
ls[0x100003ffe] <+1118>: movl   %eax, 0x457c(%rip)
ls[0x100004004] <+1124>: movl   $0x1, 0x4592(%rip)
ls[0x10000400e] <+1134>: movl   %eax, 0x4590(%rip)
ls[0x100004014] <+1140>: jmp    0x100003d10               ; <+368>
ls[0x100004019] <+1145>: movb   $0x1, 0x462c(%rip)
ls[0x100004020] <+1152>: jmp    0x100003d10               ; <+368>
ls[0x100004025] <+1157>: movl   -0x2c(%rbp), %ecx
ls[0x100004028] <+1160>: andl   $-0x13, %ecx
ls[0x10000402b] <+1163>: orl    $0x2, %ecx
ls[0x10000402e] <+1166>: movb   $0x0, 0x4613(%rip)
ls[0x100004035] <+1173>: movl   %ecx, %eax
ls[0x100004037] <+1175>: andl   $0xfffffbee, %eax         ; imm = 0xFFFFFBEE 
ls[0x10000403c] <+1180>: cmpb   $0x0, 0x4539(%rip)
ls[0x100004043] <+1187>: cmovnel %eax, %ecx
ls[0x100004046] <+1190>: movl   %ecx, -0x2c(%rbp)
ls[0x100004049] <+1193>: jmp    0x100003d10               ; <+368>
ls[0x10000404e] <+1198>: movb   $0x1, 0x45ff(%rip)
ls[0x100004055] <+1205>: jmp    0x100003d10               ; <+368>
ls[0x10000405a] <+1210>: movl   $0x1, 0x452c(%rip)
ls[0x100004064] <+1220>: xorl   %eax, %eax
ls[0x100004066] <+1222>: movl   %eax, 0x4528(%rip)
ls[0x10000406c] <+1228>: movl   %eax, 0x4526(%rip)
ls[0x100004072] <+1234>: jmp    0x100003d10               ; <+368>
ls[0x100004077] <+1239>: movl   $0x1, 0x4557(%rip)
ls[0x100004081] <+1249>: jmp    0x100003d10               ; <+368>
ls[0x100004086] <+1254>: movl   $0x0, 0x4530(%rip)
ls[0x100004090] <+1264>: movb   $0x1, 0x45c5(%rip)
ls[0x100004097] <+1271>: jmp    0x100003d10               ; <+368>
ls[0x10000409c] <+1276>: movb   $0x1, 0x4591(%rip)
ls[0x1000040a3] <+1283>: movb   $0x0, 0x4586(%rip)
ls[0x1000040aa] <+1290>: movl   $0x0, 0x44d4(%rip)
ls[0x1000040b4] <+1300>: jmp    0x100003d10               ; <+368>
ls[0x1000040b9] <+1305>: xorl   %eax, %eax
ls[0x1000040bb] <+1307>: movl   %eax, 0x44bf(%rip)
ls[0x1000040c1] <+1313>: jmp    0x1000041c5               ; <+1573>
ls[0x1000040c6] <+1318>: movb   $0x0, 0x4563(%rip)
ls[0x1000040cd] <+1325>: xorl   %eax, %eax
ls[0x1000040cf] <+1327>: movl   %eax, 0x44b3(%rip)
ls[0x1000040d5] <+1333>: movl   %eax, 0x44b1(%rip)
ls[0x1000040db] <+1339>: jmp    0x100003d10               ; <+368>
ls[0x1000040e0] <+1344>: movq   0x3f41(%rip), %rax        ; (void *)0x0000000000000000
ls[0x1000040e7] <+1351>: movq   (%rax), %rax
ls[0x1000040ea] <+1354>: movq   %rax, 0x44b7(%rip)
ls[0x1000040f1] <+1361>: jmp    0x100003d10               ; <+368>
ls[0x1000040f6] <+1366>: leaq   0x397b(%rip), %rdi        ; "CLICOLOR"
ls[0x1000040fd] <+1373>: leaq   0x394f(%rip), %rsi        ; ""
ls[0x100004104] <+1380>: movl   $0x1, %edx
ls[0x100004109] <+1385>: callq  0x100007536               ; symbol stub for: setenv
ls[0x10000410e] <+1390>: movl   $0x1, 0x4460(%rip)
ls[0x100004118] <+1400>: jmp    0x100003d10               ; <+368>
ls[0x10000411d] <+1405>: movl   -0x2c(%rbp), %eax
ls[0x100004120] <+1408>: andl   $0xfffffbec, %eax         ; imm = 0xFFFFFBEC 
ls[0x100004125] <+1413>: orl    $0x10, %eax
ls[0x100004128] <+1416>: movl   %eax, -0x2c(%rbp)
ls[0x10000412b] <+1419>: movb   $0x1, 0x4516(%rip)
ls[0x100004132] <+1426>: jmp    0x100003d10               ; <+368>
ls[0x100004137] <+1431>: movb   $0x1, 0x4512(%rip)
ls[0x10000413e] <+1438>: jmp    0x100003d10               ; <+368>
ls[0x100004143] <+1443>: movl   $0x1, 0x446b(%rip)
ls[0x10000414d] <+1453>: jmp    0x100003d10               ; <+368>
ls[0x100004152] <+1458>: movl   $0x1, %eax
ls[0x100004157] <+1463>: movl   %eax, 0x4457(%rip)
ls[0x10000415d] <+1469>: movl   %eax, 0x444d(%rip)
ls[0x100004163] <+1475>: jmp    0x100003d10               ; <+368>
ls[0x100004168] <+1480>: movl   $0x1, 0x4462(%rip)
ls[0x100004172] <+1490>: jmp    0x100003d10               ; <+368>
ls[0x100004177] <+1495>: movb   $0x1, 0x44c2(%rip)
ls[0x10000417e] <+1502>: movb   $0x0, 0x44bf(%rip)
ls[0x100004185] <+1509>: jmp    0x100003d10               ; <+368>
ls[0x10000418a] <+1514>: movl   $0x1, 0x43f8(%rip)
ls[0x100004194] <+1524>: movl   $0x0, 0x43ea(%rip)
ls[0x10000419e] <+1534>: movb   $0x0, 0x448b(%rip)
ls[0x1000041a5] <+1541>: jmp    0x100003d10               ; <+368>
ls[0x1000041aa] <+1546>: movl   $0x1, 0x440c(%rip)
ls[0x1000041b4] <+1556>: jmp    0x100003d10               ; <+368>
ls[0x1000041b9] <+1561>: movl   $0x1, 0x43bd(%rip)
ls[0x1000041c3] <+1571>: xorl   %eax, %eax
ls[0x1000041c5] <+1573>: movl   %eax, 0x43d5(%rip)
ls[0x1000041cb] <+1579>: movl   %eax, 0x43d3(%rip)
ls[0x1000041d1] <+1585>: jmp    0x100003d10               ; <+368>
ls[0x1000041d6] <+1590>: movl   $0x2, 0x4398(%rip)
ls[0x1000041e0] <+1600>: jmp    0x100003d10               ; <+368>
ls[0x1000041e5] <+1605>: cmpl   $-0x1, %eax
ls[0x1000041e8] <+1608>: je     0x1000041f4               ; <+1620>
ls[0x1000041ea] <+1610>: callq  0x1000071ff               ; ___lldb_unnamed_symbol130
ls[0x1000041ef] <+1615>: jmp    0x100003d10               ; <+368>
ls[0x1000041f4] <+1620>: movq   0x3e35(%rip), %rax        ; (void *)0x0000000000000000
ls[0x1000041fb] <+1627>: movslq (%rax), %r12
ls[0x1000041fe] <+1630>: cmpb   $0x0, 0x4437(%rip)
ls[0x100004205] <+1637>: jne    0x100004220               ; <+1664>
ls[0x100004207] <+1639>: callq  0x1000074be               ; symbol stub for: getuid
ls[0x10000420c] <+1644>: testl  %eax, %eax
ls[0x10000420e] <+1646>: jne    0x100004220               ; <+1664>
ls[0x100004210] <+1648>: testb  $0x1, 0x4435(%rip)
ls[0x100004217] <+1655>: jne    0x100004220               ; <+1664>
ls[0x100004219] <+1657>: movb   $0x1, 0x441c(%rip)
ls[0x100004220] <+1664>: movl   0x4352(%rip), %eax
ls[0x100004226] <+1670>: testl  %eax, %eax
ls[0x100004228] <+1672>: je     0x100004381               ; <+2017>
ls[0x10000422e] <+1678>: cmpl   $0x2, %eax
ls[0x100004231] <+1681>: je     0x100004285               ; <+1765>
ls[0x100004233] <+1683>: leaq   0x383e(%rip), %rdi        ; "CLICOLOR"
ls[0x10000423a] <+1690>: callq  0x1000074ac               ; symbol stub for: getenv
ls[0x10000423f] <+1695>: testq  %rax, %rax
ls[0x100004242] <+1698>: jne    0x100004262               ; <+1730>
ls[0x100004244] <+1700>: leaq   0x393c(%rip), %rdi        ; "COLORTERM"
ls[0x10000424b] <+1707>: callq  0x1000074ac               ; symbol stub for: getenv
ls[0x100004250] <+1712>: testq  %rax, %rax
ls[0x100004253] <+1715>: je     0x100004381               ; <+2017>
ls[0x100004259] <+1721>: cmpb   $0x0, (%rax)
ls[0x10000425c] <+1724>: je     0x100004381               ; <+2017>
ls[0x100004262] <+1730>: movl   $0x1, %edi
ls[0x100004267] <+1735>: callq  0x1000074dc               ; symbol stub for: isatty
ls[0x10000426c] <+1740>: testl  %eax, %eax
ls[0x10000426e] <+1742>: jne    0x100004285               ; <+1765>
ls[0x100004270] <+1744>: leaq   0x391a(%rip), %rdi        ; "CLICOLOR_FORCE"
ls[0x100004277] <+1751>: callq  0x1000074ac               ; symbol stub for: getenv
ls[0x10000427c] <+1756>: testq  %rax, %rax
ls[0x10000427f] <+1759>: je     0x100004381               ; <+2017>
ls[0x100004285] <+1765>: leaq   0x3864(%rip), %rdi        ; "TERM"
ls[0x10000428c] <+1772>: callq  0x1000074ac               ; symbol stub for: getenv
ls[0x100004291] <+1777>: testq  %rax, %rax
ls[0x100004294] <+1780>: je     0x100004365               ; <+1989>
ls[0x10000429a] <+1786>: leaq   -0x660(%rbp), %rdi
ls[0x1000042a1] <+1793>: movq   %rax, %rsi
ls[0x1000042a4] <+1796>: callq  0x100007596               ; symbol stub for: tgetent
ls[0x1000042a9] <+1801>: cmpl   $0x1, %eax
ls[0x1000042ac] <+1804>: jne    0x100004365               ; <+1989>
ls[0x1000042b2] <+1810>: leaq   0x383c(%rip), %rdi        ; "AF"
ls[0x1000042b9] <+1817>: leaq   -0x48(%rbp), %rbx
ls[0x1000042bd] <+1821>: movq   %rbx, %rsi
ls[0x1000042c0] <+1824>: callq  0x10000759c               ; symbol stub for: tgetstr
ls[0x1000042c5] <+1829>: movq   %rax, 0x431c(%rip)
ls[0x1000042cc] <+1836>: leaq   0x3825(%rip), %rdi        ; "AB"
ls[0x1000042d3] <+1843>: movq   %rbx, %rsi
ls[0x1000042d6] <+1846>: callq  0x10000759c               ; symbol stub for: tgetstr
ls[0x1000042db] <+1851>: movq   %rax, 0x430e(%rip)
ls[0x1000042e2] <+1858>: leaq   0x3812(%rip), %rdi        ; "me"
ls[0x1000042e9] <+1865>: movq   %rbx, %rsi
ls[0x1000042ec] <+1868>: callq  0x10000759c               ; symbol stub for: tgetstr
ls[0x1000042f1] <+1873>: movq   %rax, 0x4300(%rip)
ls[0x1000042f8] <+1880>: leaq   0x37ff(%rip), %rdi        ; "md"
ls[0x1000042ff] <+1887>: movq   %rbx, %rsi
ls[0x100004302] <+1890>: callq  0x10000759c               ; symbol stub for: tgetstr
ls[0x100004307] <+1895>: movq   %rax, 0x42f2(%rip)
ls[0x10000430e] <+1902>: leaq   0x37ec(%rip), %rdi        ; "op"
ls[0x100004315] <+1909>: movq   %rbx, %rsi
ls[0x100004318] <+1912>: callq  0x10000759c               ; symbol stub for: tgetstr
ls[0x10000431d] <+1917>: movq   %rax, 0x42e4(%rip)
ls[0x100004324] <+1924>: testq  %rax, %rax
ls[0x100004327] <+1927>: jne    0x100004340               ; <+1952>
ls[0x100004329] <+1929>: leaq   0x37d4(%rip), %rdi        ; "oc"
ls[0x100004330] <+1936>: leaq   -0x48(%rbp), %rsi
ls[0x100004334] <+1940>: callq  0x10000759c               ; symbol stub for: tgetstr
ls[0x100004339] <+1945>: movq   %rax, 0x42c8(%rip)
ls[0x100004340] <+1952>: cmpq   $0x0, 0x42a0(%rip)
ls[0x100004348] <+1960>: je     0x100004381               ; <+2017>
ls[0x10000434a] <+1962>: cmpq   $0x0, 0x429e(%rip)
ls[0x100004352] <+1970>: je     0x100004381               ; <+2017>
ls[0x100004354] <+1972>: testq  %rax, %rax
ls[0x100004357] <+1975>: je     0x100004381               ; <+2017>
ls[0x100004359] <+1977>: movl   $0x1, 0x42ad(%rip)
ls[0x100004363] <+1987>: jmp    0x10000438f               ; <+2031>
ls[0x100004365] <+1989>: cmpl   $0x2, 0x420c(%rip)
ls[0x10000436c] <+1996>: jne    0x100004381               ; <+2017>
ls[0x10000436e] <+1998>: movl   $0x1, 0x4298(%rip)
ls[0x100004378] <+2008>: movb   $0x1, 0x4295(%rip)
ls[0x10000437f] <+2015>: jmp    0x10000438f               ; <+2031>
ls[0x100004381] <+2017>: cmpl   $0x0, 0x4288(%rip)
ls[0x100004388] <+2024>: jne    0x10000438f               ; <+2031>
ls[0x10000438a] <+2026>: xorl   %r8d, %r8d
ls[0x10000438d] <+2029>: jmp    0x1000043d9               ; <+2105>
ls[0x10000438f] <+2031>: movl   $0x1, 0x427f(%rip)
ls[0x100004399] <+2041>: leaq   0x25d2(%rip), %rbx        ; ___lldb_unnamed_symbol121
ls[0x1000043a0] <+2048>: movl   $0x2, %edi
ls[0x1000043a5] <+2053>: movq   %rbx, %rsi
ls[0x1000043a8] <+2056>: callq  0x100007542               ; symbol stub for: signal
ls[0x1000043ad] <+2061>: movl   $0x3, %edi
ls[0x1000043b2] <+2066>: movq   %rbx, %rsi
ls[0x1000043b5] <+2069>: callq  0x100007542               ; symbol stub for: signal
ls[0x1000043ba] <+2074>: leaq   0x3746(%rip), %rdi        ; "LSCOLORS"
ls[0x1000043c1] <+2081>: callq  0x1000074ac               ; symbol stub for: getenv
ls[0x1000043c6] <+2086>: movq   %rax, %rdi
ls[0x1000043c9] <+2089>: callq  0x1000067f7               ; ___lldb_unnamed_symbol120
ls[0x1000043ce] <+2094>: cmpl   $0x0, 0x423b(%rip)
ls[0x1000043d5] <+2101>: setne  %r8b
ls[0x1000043d9] <+2105>: movl   -0x2c(%rbp), %esi
ls[0x1000043dc] <+2108>: movl   0x41e1(%rip), %r10d
ls[0x1000043e3] <+2115>: movl   0x419f(%rip), %ebx
ls[0x1000043e9] <+2121>: movl   %r10d, %edx
ls[0x1000043ec] <+2124>: orl    %ebx, %edx
ls[0x1000043ee] <+2126>: movl   0x41bc(%rip), %edi
ls[0x1000043f4] <+2132>: movl   %esi, %eax
ls[0x1000043f6] <+2134>: orl    $0x8, %eax
ls[0x1000043f9] <+2137>: testb  %r8b, %r8b
ls[0x1000043fc] <+2140>: cmovnel %esi, %eax
ls[0x1000043ff] <+2143>: movl   0x41db(%rip), %ecx
ls[0x100004405] <+2149>: orl    %edi, %ecx
ls[0x100004407] <+2151>: cmovnel %esi, %eax
ls[0x10000440a] <+2154>: cmpb   $0x0, 0x422f(%rip)
ls[0x100004411] <+2161>: cmovnel %esi, %eax
ls[0x100004414] <+2164>: cmpb   $0x0, 0x4229(%rip)
ls[0x10000441b] <+2171>: cmovnel %esi, %eax
ls[0x10000441e] <+2174>: orl    0x41b0(%rip), %edx
ls[0x100004424] <+2180>: setne  %r9b
ls[0x100004428] <+2184>: cmovnel %esi, %eax
ls[0x10000442b] <+2187>: cmpb   $0x0, 0x4216(%rip)
ls[0x100004432] <+2194>: jne    0x100004465               ; <+2245>
ls[0x100004434] <+2196>: testl  %ebx, %ebx
ls[0x100004436] <+2198>: jne    0x100004465               ; <+2245>
ls[0x100004438] <+2200>: testb  $0x1, 0x4219(%rip)
ls[0x10000443f] <+2207>: jne    0x100004465               ; <+2245>
ls[0x100004441] <+2209>: testl  %edi, %edi
ls[0x100004443] <+2211>: setne  %cl
ls[0x100004446] <+2214>: testl  %r10d, %r10d
ls[0x100004449] <+2217>: setne  %bl
ls[0x10000444c] <+2220>: cmpl   $0x0, 0x4161(%rip)
ls[0x100004453] <+2227>: sete   %dl
ls[0x100004456] <+2230>: andb   %cl, %dl
ls[0x100004458] <+2232>: orb    %bl, %dl
ls[0x10000445a] <+2234>: orb    %r8b, %dl
ls[0x10000445d] <+2237>: xorb   $0x1, %dl
ls[0x100004460] <+2240>: movzbl %dl, %ecx
ls[0x100004463] <+2243>: orl    %ecx, %eax
ls[0x100004465] <+2245>: movl   %eax, %ebx
ls[0x100004467] <+2247>: orl    $0x80, %ebx
ls[0x10000446d] <+2253>: cmpb   $0x0, 0x41e0(%rip)
ls[0x100004474] <+2260>: cmovel %eax, %ebx
ls[0x100004477] <+2263>: testb  %r9b, %r9b
ls[0x10000447a] <+2266>: je     0x1000044ba               ; <+2330>
ls[0x10000447c] <+2268>: movl   $0x2, %eax
ls[0x100004481] <+2273>: cmpb   $0x0, 0x41d4(%rip)
ls[0x100004488] <+2280>: jne    0x1000044b3               ; <+2323>
ls[0x10000448a] <+2282>: leaq   0x418f(%rip), %rsi
ls[0x100004491] <+2289>: leaq   -0x58(%rbp), %rdi
ls[0x100004495] <+2293>: callq  0x1000074a6               ; symbol stub for: getbsize
ls[0x10000449a] <+2298>: movq   0x417f(%rip), %rcx
ls[0x1000044a1] <+2305>: leaq   0x1ff(%rcx), %rax
ls[0x1000044a8] <+2312>: testq  %rcx, %rcx
ls[0x1000044ab] <+2315>: cmovnsq %rcx, %rax
ls[0x1000044af] <+2319>: sarq   $0x9, %rax
ls[0x1000044b3] <+2323>: movq   %rax, 0x4166(%rip)
ls[0x1000044ba] <+2330>: movb   0x4180(%rip), %dl
ls[0x1000044c0] <+2336>: movb   0x417e(%rip), %al
ls[0x1000044c6] <+2342>: orb    %dl, %al
ls[0x1000044c8] <+2344>: movl   %eax, %ecx
ls[0x1000044ca] <+2346>: xorb   $0x1, %cl
ls[0x1000044cd] <+2349>: orb    %dl, %cl
ls[0x1000044cf] <+2351>: cmpb   $0x1, 0x418a(%rip)
ls[0x1000044d6] <+2358>: jne    0x1000044e5               ; <+2373>
ls[0x1000044d8] <+2360>: testb  $0x1, %al
ls[0x1000044da] <+2362>: je     0x1000044f2               ; <+2386>
ls[0x1000044dc] <+2364>: leaq   -0x97e(%rip), %rax        ; ___lldb_unnamed_symbol104
ls[0x1000044e3] <+2371>: jmp    0x1000044f9               ; <+2393>
ls[0x1000044e5] <+2373>: testb  $0x1, %al
ls[0x1000044e7] <+2375>: je     0x100004526               ; <+2438>
ls[0x1000044e9] <+2377>: leaq   -0x9bd(%rip), %rax        ; ___lldb_unnamed_symbol103
ls[0x1000044f0] <+2384>: jmp    0x10000452d               ; <+2445>
ls[0x1000044f2] <+2386>: leaq   -0xba7(%rip), %rax        ; ___lldb_unnamed_symbol94
ls[0x1000044f9] <+2393>: testb  $0x1, %cl
ls[0x1000044fc] <+2396>: jne    0x1000045a1               ; <+2561>
ls[0x100004502] <+2402>: cmpl   $0x0, 0x408b(%rip)
ls[0x100004509] <+2409>: jne    0x100004556               ; <+2486>
ls[0x10000450b] <+2411>: cmpl   $0x0, 0x4086(%rip)
ls[0x100004512] <+2418>: jne    0x100004568               ; <+2504>
ls[0x100004514] <+2420>: cmpl   $0x0, 0x4075(%rip)
ls[0x10000451b] <+2427>: jne    0x100004591               ; <+2545>
ls[0x10000451d] <+2429>: leaq   -0xb5d(%rip), %rax        ; ___lldb_unnamed_symbol96
ls[0x100004524] <+2436>: jmp    0x1000045a1               ; <+2561>
ls[0x100004526] <+2438>: leaq   -0xbed(%rip), %rax        ; ___lldb_unnamed_symbol93
ls[0x10000452d] <+2445>: testb  $0x1, %cl
ls[0x100004530] <+2448>: jne    0x1000045a1               ; <+2561>
ls[0x100004532] <+2450>: cmpl   $0x0, 0x405b(%rip)
ls[0x100004539] <+2457>: jne    0x10000455f               ; <+2495>
ls[0x10000453b] <+2459>: cmpl   $0x0, 0x4056(%rip)
ls[0x100004542] <+2466>: jne    0x100004571               ; <+2513>
ls[0x100004544] <+2468>: cmpl   $0x0, 0x4045(%rip)
ls[0x10000454b] <+2475>: jne    0x10000459a               ; <+2554>
ls[0x10000454d] <+2477>: leaq   -0xbed(%rip), %rax        ; ___lldb_unnamed_symbol95
ls[0x100004554] <+2484>: jmp    0x1000045a1               ; <+2561>
ls[0x100004556] <+2486>: leaq   -0xb23(%rip), %rax        ; ___lldb_unnamed_symbol98
ls[0x10000455d] <+2493>: jmp    0x1000045a1               ; <+2561>
ls[0x10000455f] <+2495>: leaq   -0xb8c(%rip), %rax        ; ___lldb_unnamed_symbol97
ls[0x100004566] <+2502>: jmp    0x1000045a1               ; <+2561>
ls[0x100004568] <+2504>: leaq   -0xac2(%rip), %rax        ; ___lldb_unnamed_symbol100
ls[0x10000456f] <+2511>: jmp    0x1000045a1               ; <+2561>
ls[0x100004571] <+2513>: leaq   -0xb2b(%rip), %rax        ; ___lldb_unnamed_symbol99
ls[0x100004578] <+2520>: jmp    0x1000045a1               ; <+2561>
ls[0x10000457a] <+2522>: leaq   0x352f(%rip), %rsi        ; "unsupported --color value '%s' (must be always, auto, or never)"
ls[0x100004581] <+2529>: movl   $0x2, %edi
ls[0x100004586] <+2534>: movq   -0x38(%rbp), %rdx
ls[0x10000458a] <+2538>: xorl   %eax, %eax
ls[0x10000458c] <+2540>: callq  0x100007452               ; symbol stub for: errx
ls[0x100004591] <+2545>: leaq   -0xa78(%rip), %rax        ; ___lldb_unnamed_symbol102
ls[0x100004598] <+2552>: jmp    0x1000045a1               ; <+2561>
ls[0x10000459a] <+2554>: leaq   -0xae1(%rip), %rax        ; ___lldb_unnamed_symbol101
ls[0x1000045a1] <+2561>: movq   %rax, 0x40c0(%rip)
ls[0x1000045a8] <+2568>: cmpb   $0x0, 0x4081(%rip)
ls[0x1000045af] <+2575>: je     0x1000045ba               ; <+2586>
ls[0x1000045b1] <+2577>: leaq   0xfa8(%rip), %rax         ; ___lldb_unnamed_symbol109
ls[0x1000045b8] <+2584>: jmp    0x1000045e5               ; <+2629>
ls[0x1000045ba] <+2586>: cmpl   $0x0, 0x3fc7(%rip)
ls[0x1000045c1] <+2593>: jne    0x1000045d5               ; <+2613>
ls[0x1000045c3] <+2595>: cmpb   $0x0, 0x406a(%rip)
ls[0x1000045ca] <+2602>: je     0x1000045de               ; <+2622>
ls[0x1000045cc] <+2604>: leaq   0x1e94(%rip), %rax        ; ___lldb_unnamed_symbol118
ls[0x1000045d3] <+2611>: jmp    0x1000045e5               ; <+2629>
ls[0x1000045d5] <+2613>: leaq   0x1149(%rip), %rax        ; ___lldb_unnamed_symbol112
ls[0x1000045dc] <+2620>: jmp    0x1000045e5               ; <+2629>
ls[0x1000045de] <+2622>: leaq   0x1f4a(%rip), %rax        ; ___lldb_unnamed_symbol119
ls[0x1000045e5] <+2629>: movq   %rax, 0x4084(%rip)
ls[0x1000045ec] <+2636>: cmpl   $0x0, 0x3fed(%rip)
ls[0x1000045f3] <+2643>: je     0x100004622               ; <+2690>
ls[0x1000045f5] <+2645>: leaq   -0x54(%rbp), %rcx
ls[0x1000045f9] <+2649>: movl   $0x1, (%rcx)
ls[0x1000045ff] <+2655>: leaq   0x350a(%rip), %rdi        ; "vfs.nspace.prevent_materialization"
ls[0x100004606] <+2662>: movl   $0x4, %r8d
ls[0x10000460c] <+2668>: xorl   %esi, %esi
ls[0x10000460e] <+2670>: xorl   %edx, %edx
ls[0x100004610] <+2672>: callq  0x100007590               ; symbol stub for: sysctlbyname
ls[0x100004615] <+2677>: testl  %eax, %eax
ls[0x100004617] <+2679>: jns    0x100004622               ; <+2690>
ls[0x100004619] <+2681>: leaq   0x3513(%rip), %rsi        ; "prevent_materialization"
ls[0x100004620] <+2688>: jmp    0x100004689               ; <+2793>
ls[0x100004622] <+2690>: cmpl   %r14d, %r12d
ls[0x100004625] <+2693>: jne    0x100004635               ; <+2709>
ls[0x100004627] <+2695>: leaq   0x3f32(%rip), %rsi
ls[0x10000462e] <+2702>: movl   $0x1, %edi
ls[0x100004633] <+2707>: jmp    0x10000463f               ; <+2719>
ls[0x100004635] <+2709>: subl   %r12d, %r14d
ls[0x100004638] <+2712>: leaq   (%r15,%r12,8), %rsi
ls[0x10000463c] <+2716>: movl   %r14d, %edi
ls[0x10000463f] <+2719>: movl   %ebx, %edx
ls[0x100004641] <+2721>: callq  0x100004808               ; ___lldb_unnamed_symbol106
ls[0x100004646] <+2726>: movl   $0x1, %edi
ls[0x10000464b] <+2731>: cmpb   $0x0, 0x4026(%rip)
ls[0x100004652] <+2738>: jne    0x10000467d               ; <+2781>
ls[0x100004654] <+2740>: movq   0x39c5(%rip), %rax        ; (void *)0x0000000000000000
ls[0x10000465b] <+2747>: movq   (%rax), %rbx
ls[0x10000465e] <+2750>: movq   %rbx, %rdi
ls[0x100004661] <+2753>: callq  0x10000745e               ; symbol stub for: ferror
ls[0x100004666] <+2758>: testl  %eax, %eax
ls[0x100004668] <+2760>: jne    0x100004682               ; <+2786>
ls[0x10000466a] <+2762>: movq   %rbx, %rdi
ls[0x10000466d] <+2765>: callq  0x10000746a               ; symbol stub for: fflush
ls[0x100004672] <+2770>: testl  %eax, %eax
ls[0x100004674] <+2772>: jne    0x100004682               ; <+2786>
ls[0x100004676] <+2774>: movzbl 0x3ffb(%rip), %edi
ls[0x10000467d] <+2781>: callq  0x100007458               ; symbol stub for: exit
ls[0x100004682] <+2786>: leaq   0x34c2(%rip), %rsi        ; "stdout"
ls[0x100004689] <+2793>: movl   $0x1, %edi
ls[0x10000468e] <+2798>: xorl   %eax, %eax
ls[0x100004690] <+2800>: callq  0x10000744c               ; symbol stub for: err
ls[0x100004695] <+2805>: nopl   (%rax)
ls[0x100004698] <+2808>: movabsb %al, 0x52fffffb52fffff6
ls[0x1000046a1] <+2817>: sti    
